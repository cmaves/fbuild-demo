// This file defines the build to take to compile 
// object files for a library.

// TODO: Use this library in an executable

// Define the compiler. This provides FASTBuild with some basic info
// on your compiler. It creates a Compiler Node in the dependency graph
Compiler('gcc')
{
    .Executable = '/usr/bin/gcc'
    .CompilerFamily = 'gcc'
}

// Define the objects that are apart of our Fib library.
// The .Compiler option creates deps on 'gcc' defined above
// and .CompilerInputFiles creates a dependency on 'fib.c'
ObjectList('Fib-Obj')
{
    .Compiler = 'gcc' // Same string as the Compiler defined above
    // %n are special values that will be subsititude in by FASTBuild
    .CompilerOptions = "-c -g -I include -o %2 %1"

    .CompilerInputFiles = 'fib.c'
    .CompilerOutputPath = 'build/intermediate'
}

// Define the DLL target
DLL('Fib-DLL')
{
    .Linker = '/usr/bin/gcc' // I don't know why FASTBuild defines a Compiler node but not a linker node
    .LinkerOutput = 'build/libfib.so'
    // %n are special values that will be subsititude in by FASTBuild
    .LinkerOptions = '-shared -fPIC -o %2 %1'
    .Libraries = 'Fib-Obj' // This provides our link back to Fib-Obj
}

// 'all' is the default target. 
// Running ./fbuild is equivelent to ./fbuild all
// This make it easy run FASTBuild without args.
Alias('all')
{
    .Targets = { 'Fib-DLL' }
}

