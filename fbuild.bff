// TODO: Link the DLL and main object into an executable

// .Compiler, .CompilerOptions, and .CompilerOutputPath
// will be consumed by apporiate function below (ObjectList) 
// if they aren't overridden.
.Compiler = 'gcc'
.CompilerOptions = "-c -g -I include -o %2 %1"
.CompilerOutputPath = 'build/intermediate'
Compiler(.Compiler)
{
    .Executable = '/usr/bin/gcc'
    .CompilerFamily = 'gcc'
}

// Define the objects that are apart of our Fib library.
ObjectList('Fib-Obj')
{
    // .Compiler is defined above. ObjectList will implicitly consume it
    .CompilerInputFiles = 'fib.c'
}

// Define the DLL target
DLL('Fib-DLL')
{
    .Linker = '/usr/bin/gcc' // I don't know why FASTBuild defines a Compiler node but not a linker node
    .LinkerOutput = 'build/libfib.so'
    // %n are special values that will be subsititude in by FASTBuild
    .LinkerOptions = '-shared -fPIC -o %2 %1'
    .Libraries = 'Fib-Obj' // This provides our link back to Fib-Obj
}

ObjectList('Main-Obj')
{
    .CompilerInputFiles = 'main.c'
}

// 'all' is the default target. 
// Running ./fbuild is equivelent to ./fbuild all
// This make it easy run FASTBuild without args.
Alias('all')
{
    .Targets = { 'Fib-DLL', 'Main-Obj' }
}

